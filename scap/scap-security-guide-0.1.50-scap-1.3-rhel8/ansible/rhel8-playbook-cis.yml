---
###############################################################################
#
# Ansible Playbook for CIS Red Hat Enterprise Linux 8 Benchmark
#
# Profile Description:
# This baseline aligns to the Center for Internet Security
# Red Hat Enterprise Linux 8 Benchmark, v1.0.0, released
# 09-30-2019.
#
# Profile ID:  cis
# Benchmark ID:  RHEL-8
# Benchmark Version:  0.1.50
# XCCDF Version:  1.1
#
# This file was generated by OpenSCAP 1.3.3 using:
# $ oscap xccdf generate fix --profile cis --fix-type ansible xccdf-file.xml
#
# This Ansible Playbook is generated from an OpenSCAP profile without preliminary evaluation.
# It attempts to fix every selected rule, even if the system is already compliant.
#
# How to apply this Ansible Playbook:
# $ ansible-playbook -i "localhost," -c local playbook.yml
# $ ansible-playbook -i "192.168.1.155," playbook.yml
# $ ansible-playbook -i inventory.ini playbook.yml
#
###############################################################################

- hosts: all
  vars:
    login_banner_text: !!str ^(You[\s\n]+are[\s\n]+accessing[\s\n]+a[\s\n]+U\.S\.[\s\n]+Government[\s\n]+\(USG\)[\s\n]+Information[\s\n]+System[\s\n]+\(IS\)[\s\n]+that[\s\n]+is[\s\n]+provided[\s\n]+for[\s\n]+USG\-authorized[\s\n]+use[\s\n]+only\.[\s\n]+By[\s\n]+using[\s\n]+this[\s\n]+IS[\s\n]+\(which[\s\n]+includes[\s\n]+any[\s\n]+device[\s\n]+attached[\s\n]+to[\s\n]+this[\s\n]+IS\)\,[\s\n]+you[\s\n]+consent[\s\n]+to[\s\n]+the[\s\n]+following[\s\n]+conditions\:(?:[\n]+|(?:\\n)+)\-The[\s\n]+USG[\s\n]+routinely[\s\n]+intercepts[\s\n]+and[\s\n]+monitors[\s\n]+communications[\s\n]+on[\s\n]+this[\s\n]+IS[\s\n]+for[\s\n]+purposes[\s\n]+including\,[\s\n]+but[\s\n]+not[\s\n]+limited[\s\n]+to\,[\s\n]+penetration[\s\n]+testing\,[\s\n]+COMSEC[\s\n]+monitoring\,[\s\n]+network[\s\n]+operations[\s\n]+and[\s\n]+defense\,[\s\n]+personnel[\s\n]+misconduct[\s\n]+\(PM\)\,[\s\n]+law[\s\n]+enforcement[\s\n]+\(LE\)\,[\s\n]+and[\s\n]+counterintelligence[\s\n]+\(CI\)[\s\n]+investigations\.(?:[\n]+|(?:\\n)+)\-At[\s\n]+any[\s\n]+time\,[\s\n]+the[\s\n]+USG[\s\n]+may[\s\n]+inspect[\s\n]+and[\s\n]+seize[\s\n]+data[\s\n]+stored[\s\n]+on[\s\n]+this[\s\n]+IS\.(?:[\n]+|(?:\\n)+)\-Communications[\s\n]+using\,[\s\n]+or[\s\n]+data[\s\n]+stored[\s\n]+on\,[\s\n]+this[\s\n]+IS[\s\n]+are[\s\n]+not[\s\n]+private\,[\s\n]+are[\s\n]+subject[\s\n]+to[\s\n]+routine[\s\n]+monitoring\,[\s\n]+interception\,[\s\n]+and[\s\n]+search\,[\s\n]+and[\s\n]+may[\s\n]+be[\s\n]+disclosed[\s\n]+or[\s\n]+used[\s\n]+for[\s\n]+any[\s\n]+USG\-authorized[\s\n]+purpose\.(?:[\n]+|(?:\\n)+)\-This[\s\n]+IS[\s\n]+includes[\s\n]+security[\s\n]+measures[\s\n]+\(e\.g\.\,[\s\n]+authentication[\s\n]+and[\s\n]+access[\s\n]+controls\)[\s\n]+to[\s\n]+protect[\s\n]+USG[\s\n]+interests\-\-not[\s\n]+for[\s\n]+your[\s\n]+personal[\s\n]+benefit[\s\n]+or[\s\n]+privacy\.(?:[\n]+|(?:\\n)+)\-Notwithstanding[\s\n]+the[\s\n]+above\,[\s\n]+using[\s\n]+this[\s\n]+IS[\s\n]+does[\s\n]+not[\s\n]+constitute[\s\n]+consent[\s\n]+to[\s\n]+PM\,[\s\n]+LE[\s\n]+or[\s\n]+CI[\s\n]+investigative[\s\n]+searching[\s\n]+or[\s\n]+monitoring[\s\n]+of[\s\n]+the[\s\n]+content[\s\n]+of[\s\n]+privileged[\s\n]+communications\,[\s\n]+or[\s\n]+work[\s\n]+product\,[\s\n]+related[\s\n]+to[\s\n]+personal[\s\n]+representation[\s\n]+or[\s\n]+services[\s\n]+by[\s\n]+attorneys\,[\s\n]+psychotherapists\,[\s\n]+or[\s\n]+clergy\,[\s\n]+and[\s\n]+their[\s\n]+assistants\.[\s\n]+Such[\s\n]+communications[\s\n]+and[\s\n]+work[\s\n]+product[\s\n]+are[\s\n]+private[\s\n]+and[\s\n]+confidential\.[\s\n]+See[\s\n]+User[\s\n]+Agreement[\s\n]+for[\s\n]+details\.|I've[\s\n]+read[\s\n]+\&[\s\n]+consent[\s\n]+to[\s\n]+terms[\s\n]+in[\s\n]+IS[\s\n]+user[\s\n]+agreem't\.)$
    var_auditd_admin_space_left_action: !!str halt
    var_auditd_space_left_action: !!str email
    var_auditd_action_mail_acct: !!str root
    var_auditd_max_log_file: !!str 6
    var_auditd_max_log_file_action: !!str rotate
    sysctl_net_ipv4_conf_all_accept_source_route_value: !!str 0
    sysctl_net_ipv4_tcp_syncookies_value: !!str 1
    sysctl_net_ipv4_conf_default_accept_redirects_value: !!str 0
    sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: !!str 1
    sysctl_net_ipv4_conf_default_log_martians_value: !!str 1
    sysctl_net_ipv4_conf_default_accept_source_route_value: !!str 0
    sysctl_net_ipv4_conf_all_secure_redirects_value: !!str 0
    sysctl_net_ipv4_conf_all_rp_filter_value: !!str 1
    sysctl_net_ipv4_conf_all_log_martians_value: !!str 1
    sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value: !!str 1
    sysctl_net_ipv4_conf_all_accept_redirects_value: !!str 0
    sysctl_net_ipv4_conf_default_rp_filter_value: !!str 1
    sysctl_net_ipv6_conf_all_accept_redirects_value: !!str 0
    sysctl_net_ipv6_conf_default_accept_source_route_value: !!str 0
    sysctl_net_ipv6_conf_default_accept_ra_value: !!str 0
    sysctl_net_ipv6_conf_all_accept_ra_value: !!str 0
    sysctl_net_ipv6_conf_all_forwarding_value: !!str 0
    sysctl_net_ipv6_conf_all_accept_source_route_value: !!str 0
    var_system_crypto_policy: !!str DEFAULT
    var_removable_partition: !!str /dev/cdrom
    var_selinux_policy_name: !!str targeted
    var_selinux_state: !!str enforcing
    var_postfix_inet_interfaces: !!str loopback-only
    var_sshd_set_keepalive: !!str 0
    sshd_idle_timeout_value: !!str 300
    sshd_max_auth_tries_value: !!str 4
  tasks:

    - name: Modify the System Message of the Day Banner - remove incorrect banner
      file:
        state: absent
        path: /etc/motd
      tags:
        - banner_etc_motd
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-83496-0

    - name: Modify the System Message of the Day Banner - add correct banner
      lineinfile:
        dest: /etc/motd
        line: '{{ login_banner_text | regex_replace("^\^(.*)\$$", "\1") | regex_replace("^\((.*)\|.*\)$",
          "\1") | regex_replace("\[\\s\\n\]\+"," ") | regex_replace("\(\?:\[\\n\]\+\|\(\?:\\\\n\)\+\)",
          "\n") | regex_replace("\\", "") | wordwrap() }}'
        create: true
      tags:
        - banner_etc_motd
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-83496-0

    - name: Test for existence /etc/motd
      stat:
        path: /etc/motd
      register: file_exists
      tags:
        - file_permissions_etc_motd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83338-4

    - name: Ensure permission 0644 on /etc/motd
      file:
        path: /etc/motd
        mode: '0644'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_permissions_etc_motd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83338-4

    - name: Test for existence /etc/issue
      stat:
        path: /etc/issue
      register: file_exists
      tags:
        - file_permissions_etc_issue
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83348-3

    - name: Ensure permission 0644 on /etc/issue
      file:
        path: /etc/issue
        mode: '0644'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_permissions_etc_issue
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83348-3

    - name: Modify the System Login Banner - remove incorrect banner
      file:
        state: absent
        path: /etc/issue
      tags:
        - banner_etc_issue
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80763-6
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(c)
        - NIST-800-171-3.1.9

    - name: Modify the System Login Banner - add correct banner
      lineinfile:
        dest: /etc/issue
        line: '{{ login_banner_text | regex_replace("^\^(.*)\$$", "\1") | regex_replace("^\((.*)\|.*\)$",
          "\1") | regex_replace("\[\\s\\n\]\+"," ") | regex_replace("\(\?:\[\\n\]\+\|\(\?:\\\\n\)\+\)",
          "\n") | regex_replace("\\", "") | wordwrap() }}'
        create: true
      tags:
        - banner_etc_issue
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80763-6
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(c)
        - NIST-800-171-3.1.9

    - name: Set the GNOME3 Login Warning Banner Text
      file:
        path: /etc/dconf/db/{{ item }}
        owner: root
        group: root
        mode: 493
        state: directory
      with_items:
        - gdm.d
        - gdm.d/locks
      tags:
        - dconf_gnome_login_banner_text
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80770-1
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(c)
        - NIST-800-171-3.1.9

    - name: Set the GNOME3 Login Warning Banner Text
      file:
        path: /etc/dconf/db/gdm.d/{{ item }}
        owner: root
        group: root
        mode: 420
        state: touch
      with_items:
        - 00-security-settings
        - locks/00-security-settings-lock
      tags:
        - dconf_gnome_login_banner_text
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80770-1
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(c)
        - NIST-800-171-3.1.9

    - name: Set the GNOME3 Login Warning Banner Text
      ini_file:
        dest: /etc/dconf/db/gdm.d/00-security-settings
        section: org/gnome/login-screen
        option: banner-message-text
        value: '''{{ login_banner_text | regex_replace("^\^(.*)\$$", "\1") | regex_replace("^\((.*)\|.*\)$",
          "\1") | regex_replace("\[\\s\\n\]\+"," ") | regex_replace("\(\?:\[\\n\]\+\|\(\?:\\\\n\)\+\)",
          "(n)*") | regex_replace("\\", "") | regex_replace("\(n\)\*", "\\n") }}'''
        create: true
        no_extra_spaces: true
      tags:
        - dconf_gnome_login_banner_text
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80770-1
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(c)
        - NIST-800-171-3.1.9

    - name: Prevent user modification of the GNOME3 Login Warning Banner Text
      lineinfile:
        path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/login-screen/banner-message-text$
        line: /org/gnome/login-screen/banner-message-text
        create: true
        state: present
      tags:
        - dconf_gnome_login_banner_text
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80770-1
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(c)
        - NIST-800-171-3.1.9

    - name: Enable GNOME3 Login Warning Banner
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/login-screen
        option: banner-message-enable
        value: 'true'
        create: true
      tags:
        - dconf_gnome_banner_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80768-5
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)
        - NIST-800-171-3.1.9

    - name: Prevent user modification of GNOME banner-message-enabled
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: ^/org/gnome/login-screen/banner-message-enable
        line: /org/gnome/login-screen/banner-message-enable
        create: true
      tags:
        - dconf_gnome_banner_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80768-5
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)
        - NIST-800-171-3.1.9

    - name: require emergency mode password
      lineinfile:
        create: true
        dest: /usr/lib/systemd/system/emergency.service
        regexp: ^#?ExecStart=
        line: ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - require_emergency_target_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82186-8
        - NIST-800-53-IA-2
        - NIST-800-53-AC-3
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.4.5

    - name: require single user mode password
      lineinfile:
        create: true
        dest: /usr/lib/systemd/system/rescue.service
        regexp: ^#?ExecStart=
        line: ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - require_singleuser_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80855-0
        - NIST-800-53-IA-2
        - NIST-800-53-AC-3
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.4.5

    - name: Backup the old /etc/shadow file
      copy:
        src: /etc/shadow
        dest: /etc/shadow-
        remote_src: true
      tags:
        - no_legacy_plus_entries_etc_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-84290-6

    - name: Remove lines starting with + from /etc/shadow
      lineinfile:
        regexp: ^\+.*$
        state: absent
        path: /etc/shadow
      tags:
        - no_legacy_plus_entries_etc_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-84290-6

    - name: Backup the old /etc/passwd file
      copy:
        src: /etc/passwd
        dest: /etc/passwd-
        remote_src: true
      tags:
        - no_legacy_plus_entries_etc_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-82890-5

    - name: Remove lines starting with + from /etc/passwd
      lineinfile:
        regexp: ^\+.*$
        state: absent
        path: /etc/passwd
      tags:
        - no_legacy_plus_entries_etc_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-82890-5

    - name: Backup the old /etc/group file
      copy:
        src: /etc/group
        dest: /etc/group-
        remote_src: true
      tags:
        - no_legacy_plus_entries_etc_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-83389-7

    - name: Remove lines starting with + from /etc/group
      lineinfile:
        regexp: ^\+.*$
        state: absent
        path: /etc/group
      tags:
        - no_legacy_plus_entries_etc_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-83389-7

    - name: Ensure audit is installed
      package:
        name: audit
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_audit_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-81043-2
        - NIST-800-53-AC-7(a)
        - NIST-800-53-AU-7(1)
        - NIST-800-53-AU-7(2)
        - NIST-800-53-AU-14
        - NIST-800-53-AU-12(2)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-CM-6(a)

    - name: Enable service auditd
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service auditd
          service:
            name: auditd
            enabled: 'yes'
            state: started
          when:
            - '"audit" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_auditd_enabled
        - high_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80872-5
        - NIST-800-53-AC-2(g)
        - NIST-800-53-AU-3
        - NIST-800-53-AU-10
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.2
        - NIST-800-171-3.3.6
        - PCI-DSS-Req-10.1
        - CJIS-5.4.1.1

    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_audit_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-80825-3
        - NIST-800-53-AC-17(1)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-AU-10
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IR-5(1)
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.3
        - CJIS-5.4.1.1

    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} audit=1"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - kernelopts.stdout | regex_search('^kernelopts=(?:.*\s)?audit=1(?:\s.*)?$', multiline=True)
          is none
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_audit_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-80825-3
        - NIST-800-53-AC-17(1)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-AU-10
        - NIST-800-53-CM-6(a)
        - NIST-800-53-IR-5(1)
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.3
        - CJIS-5.4.1.1

    - name: get current kernel parameters
      command: /usr/bin/grub2-editenv - list
      register: kernelopts
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_audit_backlog_limit_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-80943-4
        - NIST-800-53-CM-6(a)

    - name: Update the bootloader menu
      command: /usr/bin/grub2-editenv - set "{{ item }} audit_backlog_limit=8192"
      with_items: '{{ kernelopts.stdout_lines | select(''match'', ''^kernelopts.*'') |
        list }}'
      when:
        - kernelopts.stdout_lines is defined
        - kernelopts.stdout_lines | length > 0
        - kernelopts.stdout | regex_search('^kernelopts=(?:.*\s)?audit_backlog_limit=8192(?:\s.*)?$',
          multiline=True) is none
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_audit_backlog_limit_argument
        - medium_severity
        - restrict_strategy
        - medium_complexity
        - low_disruption
        - reboot_required
        - CCE-80943-4
        - NIST-800-53-CM-6(a)

    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Remediate audit rules for network configuration for x86
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - sethostname
              - setdomainname

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_rules_networkconfig_modification
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as
            the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification'
                }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - sethostname
              - setdomainname

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification'
                }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Remediate audit rules for network configuration for x86_64
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - sethostname
              - setdomainname

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_rules_networkconfig_modification
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as
            the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification'
                }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - sethostname
              - setdomainname

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_rules_networkconfig_modification'
                }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Check if watch rule for /etc/issue already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/issue\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the
        recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Add watch rule for /etc/issue in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/issue -p wa -k audit_rules_networkconfig_modification
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Check if watch rule for /etc/issue already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/issue\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Add watch rule for /etc/issue in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/issue -p wa -k audit_rules_networkconfig_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Check if watch rule for /etc/issue.net already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/issue.net\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the
        recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Add watch rule for /etc/issue.net in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Check if watch rule for /etc/issue.net already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/issue.net\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Add watch rule for /etc/issue.net in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/issue.net -p wa -k audit_rules_networkconfig_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Check if watch rule for /etc/hosts already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/hosts\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the
        recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Add watch rule for /etc/hosts in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/hosts -p wa -k audit_rules_networkconfig_modification
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Check if watch rule for /etc/hosts already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/hosts\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Add watch rule for /etc/hosts in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/hosts -p wa -k audit_rules_networkconfig_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Check if watch rule for /etc/sysconfig/network already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/sysconfig/network\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other rules with specified key audit_rules_networkconfig_modification
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_rules_networkconfig_modification$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Use /etc/audit/rules.d/audit_rules_networkconfig_modification.rules as the
        recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_rules_networkconfig_modification.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Add watch rule for /etc/sysconfig/network in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Check if watch rule for /etc/sysconfig/network already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/sysconfig/network\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Add watch rule for /etc/sysconfig/network in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/sysconfig/network -p wa -k audit_rules_networkconfig_modification
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_networkconfig_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80723-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Check if watch rule for /etc/selinux/ already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/selinux/\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_mac_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80721-4
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other rules with specified key MAC-policy
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)MAC-policy$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_mac_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80721-4
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Use /etc/audit/rules.d/MAC-policy.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/MAC-policy.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_mac_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80721-4
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_mac_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80721-4
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Add watch rule for /etc/selinux/ in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/selinux/ -p wa -k MAC-policy
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_mac_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80721-4
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Check if watch rule for /etc/selinux/ already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/selinux/\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_mac_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80721-4
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Add watch rule for /etc/selinux/ in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/selinux/ -p wa -k MAC-policy
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_mac_modification
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80721-4
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for audit rule entries for sysadmin actions
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: ^.*/etc/sudoers.*$
        patterns: '*.rules'
      register: find_audit_sysadmin_actions
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_sysadmin_actions
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80743-8
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - CJIS-5.4.1.1

    - name: Use /etc/audit/rules.d/actions.rules as the recipient for the rule
      set_fact:
        all_sysadmin_actions_files:
          - /etc/audit/rules.d/actions.rules
      when:
        - find_audit_sysadmin_actions.matched is defined and find_audit_sysadmin_actions.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_sysadmin_actions
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80743-8
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_sysadmin_actions_files:
          - '{{ find_audit_sysadmin_actions.files | map(attribute=''path'') | list | first
            }}'
      when:
        - find_audit_sysadmin_actions.matched is defined and find_audit_sysadmin_actions.matched
          > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_sysadmin_actions
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80743-8
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - CJIS-5.4.1.1

    - name: Inserts/replaces audit rule for /etc/sudoers rule in rules.d
      lineinfile:
        path: '{{ all_sysadmin_actions_files[0] }}'
        line: -w /etc/sudoers -p wa -k actions
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_sysadmin_actions
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80743-8
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - CJIS-5.4.1.1

    - name: Inserts/replaces audit rule for /etc/sudoers.d rule in rules.d
      lineinfile:
        path: '{{ all_sysadmin_actions_files[0] }}'
        line: -w /etc/sudoers.d/ -p wa -k actions
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_sysadmin_actions
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80743-8
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - CJIS-5.4.1.1

    - name: Inserts/replaces audit rule for /etc/sudoers in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -w /etc/sudoers -p wa -k actions
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_sysadmin_actions
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80743-8
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - CJIS-5.4.1.1

    - name: Inserts/replaces audit rule for /etc/sudoers.d in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: -w /etc/sudoers.d/ -p wa -k actions
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_sysadmin_actions
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80743-8
        - NIST-800-53-AC-2(7)(b)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - PCI-DSS-Req-10.2.5.b
        - CJIS-5.4.1.1

    - name: Check if watch rule for /var/run/utmp already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/var/run/utmp\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other rules with specified key session
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)session$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Use /etc/audit/rules.d/session.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/session.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Add watch rule for /var/run/utmp in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/run/utmp -p wa -k session
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Check if watch rule for /var/run/utmp already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/var/run/utmp\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Add watch rule for /var/run/utmp in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/run/utmp -p wa -k session
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Check if watch rule for /var/log/btmp already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/var/log/btmp\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other rules with specified key session
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)session$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Use /etc/audit/rules.d/session.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/session.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Add watch rule for /var/log/btmp in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/log/btmp -p wa -k session
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Check if watch rule for /var/log/btmp already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/var/log/btmp\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Add watch rule for /var/log/btmp in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/log/btmp -p wa -k session
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Check if watch rule for /var/log/wtmp already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/var/log/wtmp\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other rules with specified key session
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)session$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Use /etc/audit/rules.d/session.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/session.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Add watch rule for /var/log/wtmp in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/log/wtmp -p wa -k session
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Check if watch rule for /var/log/wtmp already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/var/log/wtmp\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Add watch rule for /var/log/wtmp in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/log/wtmp -p wa -k session
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_session_events
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80742-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - CJIS-5.4.1.1

    - name: Set architecture for audit faillock tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80718-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: '*.rules'
      register: find_faillock
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80718-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_faillock.matched is defined and find_faillock.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80718-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_faillock.files | map(attribute=''path'') | list | first }}'
      when:
        - find_faillock.matched is defined and find_faillock.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80718-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Inserts/replaces the faillock rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/run/faillock -p wa -k logins
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80718-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/run/faillock -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80718-0
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Set architecture for audit lastlog tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80719-8
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: /etc/audit/rules.d
        recurse: false
        contains: -k logins$
        patterns: '*.rules'
      register: find_lastlog
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80719-8
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules
        as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when:
        - find_lastlog.matched is defined and find_lastlog.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80719-8
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_lastlog.files | map(attribute=''path'') | list | first }}'
      when:
        - find_lastlog.matched is defined and find_lastlog.matched > 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80719-8
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Inserts/replaces the lastlog rule in rules.d when on x86
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /var/log/lastlog -p wa -k logins
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80719-8
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
      lineinfile:
        line: -w /var/log/lastlog -p wa -k logins
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-80719-8
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3

    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_clock_settime
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80746-1
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Perform remediation of Audit rules for clock_settime for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - clock_settime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key time-change
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)time-change$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/time-change.rules as the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/time-change.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - clock_settime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_clock_settime
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80746-1
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Perform remediation of Audit rules for clock_settime for x86_64 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - clock_settime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key time-change
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)time-change$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/time-change.rules as the recipient for the rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/time-change.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - clock_settime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(?:-F[\s]+a0=0x0[\s]+)(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -F a0=0x0 -k time-change' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_clock_settime
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80746-1
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_adjtimex
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80745-3
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Perform remediation of Audit rules for adjtimex for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - adjtimex

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - adjtimex

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_adjtimex
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80745-3
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Perform remediation of Audit rules for adjtimex for x86_64 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - adjtimex

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - adjtimex

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_adjtimex
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80745-3
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Perform remediation of Audit rules for stime syscall for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - stime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - stime

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_stime
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80748-7
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Set architecture for audit tasks
      set_fact:
        audit_arch: b{{ ansible_architecture | regex_replace('.*(\d\d$)','\1') }}
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_settimeofday
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80747-9
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Perform remediation of Audit rules for settimeofday for x86 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - settimeofday

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b32_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b32_rules_d="{{ audit_syscalls_found_b32_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - settimeofday

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b32 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b32[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b32_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b32 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b32_audit_rules="{{ audit_syscalls_found_b32_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b32"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b32_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b32_audit_rules < audit_syscalls_number_of_syscalls
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_settimeofday
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80747-9
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Perform remediation of Audit rules for settimeofday for x86_64 platform
      block:

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - settimeofday

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/rules.d/
          find:
            paths: /etc/audit/rules.d
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: '*.rules'
          register: audit_syscalls_found_b64_rules_d
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/rules.d/
          set_fact: audit_syscalls_matched_b64_rules_d="{{ audit_syscalls_found_b64_rules_d.results|sum(attribute='matched')|int
            }}"

        - name: Search /etc/audit/rules.d for other rules with the key audit_time_rules
          find:
            paths: /etc/audit/rules.d
            contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
            patterns: '*.rules'
          register: find_syscalls_files

        - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the
            rule
          set_fact:
            all_files:
              - /etc/audit/rules.d/audit_time_rules.rules
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            == 0

        - name: Use matched file as the recipient for the rule
          set_fact:
            all_files:
              - '{{ find_syscalls_files.files | map(attribute=''path'') | list | first
                }}'
          when: find_syscalls_files.matched is defined and find_syscalls_files.matched
            > 0

        - name: Insert the syscall rule in {{ all_files[0] }}
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_rules_d.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in {{ all_files[0] }}
              lineinfile:
                path: '{{ all_files[0] }}'
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_rules_d < audit_syscalls_number_of_syscalls

        - name: Declare list of syscals
          set_fact:
            syscalls:
              - settimeofday

        - name: Declare number of syscalls
          set_fact: audit_syscalls_number_of_syscalls="{{ syscalls|length|int }}"

        - name: Check existence of syscalls for architecture b64 in /etc/audit/audit.rules
          find:
            paths: /etc/audit
            contains: ^[\s]*-a[\s]+always,exit[\s]+(?:.*-F[\s]+arch=b64[\s]+)(?:.*(-S[\s]+{{
              item }}[\s]+|([\s]+|[,]){{ item }}([\s]+|[,]))).*(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$
            patterns: audit.rules
          register: audit_syscalls_found_b64_audit_rules
          loop: '{{ syscalls }}'

        - name: Get number of matched syscalls for architecture b64 in /etc/audit/audit.rules
          set_fact: audit_syscalls_matched_b64_audit_rules="{{ audit_syscalls_found_b64_audit_rules.results|sum(attribute='matched')|int
            }}"

        - name: Insert the syscall rule in /etc/audit/audit.rules
          block:

            - name: 'Construct rule: add rule list, action and arch'
              set_fact: tmpline="-a always,exit -F arch=b64"

            - name: 'Construct rule: add syscalls'
              set_fact: tmpline="{{ tmpline + ' -S ' + item.item }}"
              loop: '{{ audit_syscalls_found_b64_audit_rules.results }}'
              when: item.matched is defined and item.matched == 0

            - name: 'Construct rule: add fields and key'
              set_fact: tmpline="{{ tmpline + ' -k audit_time_rules' }}"

            - name: Insert the line in /etc/audit/audit.rules
              lineinfile:
                path: /etc/audit/audit.rules
                line: '{{ tmpline }}'
                create: true
                state: present
          when: audit_syscalls_matched_b64_audit_rules < audit_syscalls_number_of_syscalls
      when:
        - audit_arch == "b64"
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_settimeofday
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80747-9
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Check if watch rule for /etc/localtime already exists in /etc/audit/rules.d/
      find:
        paths: /etc/audit/rules.d
        contains: ^\s*-w\s+/etc/localtime\s+-p\s+wa(\s|$)+
        patterns: '*.rules'
      register: find_existing_watch_rules_d
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_watch_localtime
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80749-5
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Search /etc/audit/rules.d for other rules with specified key audit_time_rules
      find:
        paths: /etc/audit/rules.d
        contains: ^.*(?:-F key=|-k\s+)audit_time_rules$
        patterns: '*.rules'
      register: find_watch_key
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_watch_localtime
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80749-5
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Use /etc/audit/rules.d/audit_time_rules.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/audit_time_rules.rules
      when:
        - find_watch_key.matched is defined and find_watch_key.matched == 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_watch_localtime
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80749-5
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - '{{ find_watch_key.files | map(attribute=''path'') | list | first }}'
      when:
        - find_watch_key.matched is defined and find_watch_key.matched > 0 and find_existing_watch_rules_d.matched
          is defined and find_existing_watch_rules_d.matched == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_watch_localtime
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80749-5
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Add watch rule for /etc/localtime in /etc/audit/rules.d/
      lineinfile:
        path: '{{ all_files[0] }}'
        line: -w /etc/localtime -p wa -k audit_time_rules
        create: true
      when:
        - find_existing_watch_rules_d.matched is defined and find_existing_watch_rules_d.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_watch_localtime
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80749-5
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Check if watch rule for /etc/localtime already exists in /etc/audit/audit.rules
      find:
        paths: /etc/audit/
        contains: ^\s*-w\s+/etc/localtime\s+-p\s+wa(\s|$)+
        patterns: audit.rules
      register: find_existing_watch_audit_rules
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_watch_localtime
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80749-5
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Add watch rule for /etc/localtime in /etc/audit/audit.rules
      lineinfile:
        line: -w /etc/localtime -p wa -k audit_time_rules
        state: present
        dest: /etc/audit/audit.rules
        create: true
      when:
        - find_existing_watch_audit_rules.matched is defined and find_existing_watch_audit_rules.matched
          == 0
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - audit_rules_time_watch_localtime
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80749-5
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AC-6(9)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.4.2.b
        - CJIS-5.4.1.1

    - name: Configure auditd admin_space_left Action on Low Disk Space
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: admin_space_left_action = {{ var_auditd_admin_space_left_action }}
        regexp: ^\s*admin_space_left_action\s*=\s*.*$
        state: present
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_data_retention_admin_space_left_action
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80679-4
        - NIST-800-53-AU-5(b)
        - NIST-800-53-AU-5(2)
        - NIST-800-53-AU-5(1)
        - NIST-800-53-AU-5(4)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.7
        - CJIS-5.4.1.1

    - name: Configure auditd space_left Action on Low Disk Space
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: space_left_action = {{ var_auditd_space_left_action }}
        regexp: ^\s*space_left_action\s*=\s*.*$
        state: present
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_data_retention_space_left_action
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80684-4
        - NIST-800-53-AU-5(b)
        - NIST-800-53-AU-5(2)
        - NIST-800-53-AU-5(1)
        - NIST-800-53-AU-5(4)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.7
        - CJIS-5.4.1.1

    - name: Configure auditd mail_acct Action on Low Disk Space
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: action_mail_acct = {{ var_auditd_action_mail_acct }}
        state: present
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_data_retention_action_mail_acct
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80678-6
        - NIST-800-53-IA-5(1)
        - NIST-800-53-AU-5(a)
        - NIST-800-53-AU-5(2)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.7.a
        - CJIS-5.4.1.1

    - name: Configure auditd Max Log File Size
      lineinfile:
        dest: /etc/audit/auditd.conf
        regexp: ^\s*max_log_file\s*=\s*.*$
        line: max_log_file = {{ var_auditd_max_log_file }}
        state: present
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_data_retention_max_log_file
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80681-0
        - NIST-800-53-AU-11
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.7
        - CJIS-5.4.1.1

    - name: Configure auditd max_log_file_action Upon Reaching Maximum Log Size
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: max_log_file_action = {{ var_auditd_max_log_file_action }}
        regexp: ^\s*max_log_file_action\s*=\s*.*$
        state: present
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - auditd_data_retention_max_log_file_action
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80682-8
        - NIST-800-53-AU-5(b)
        - NIST-800-53-AU-5(2)
        - NIST-800-53-AU-5(1)
        - NIST-800-53-AU-5(4)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-10.7
        - CJIS-5.4.1.1

    - name: Test for existence /boot/grub2/grub.cfg
      stat:
        path: /boot/grub2/grub.cfg
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_grub2_cfg
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80800-6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-171-3.4.5
        - PCI-DSS-Req-7.1
        - CJIS-5.5.2.2

    - name: Ensure group owner 0 on /boot/grub2/grub.cfg
      file:
        path: /boot/grub2/grub.cfg
        group: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_grub2_cfg
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80800-6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-171-3.4.5
        - PCI-DSS-Req-7.1
        - CJIS-5.5.2.2

    - name: Test for existence /boot/grub2/grub.cfg
      stat:
        path: /boot/grub2/grub.cfg
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_grub2_cfg
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80814-7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-171-3.4.5

    - name: Ensure permission 600 on /boot/grub2/grub.cfg
      file:
        path: /boot/grub2/grub.cfg
        mode: '600'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_grub2_cfg
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80814-7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-171-3.4.5

    - name: Test for existence /boot/grub2/grub.cfg
      stat:
        path: /boot/grub2/grub.cfg
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_grub2_cfg
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80805-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-171-3.4.5
        - PCI-DSS-Req-7.1
        - CJIS-5.5.2.2

    - name: Ensure owner 0 on /boot/grub2/grub.cfg
      file:
        path: /boot/grub2/grub.cfg
        owner: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_grub2_cfg
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80805-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-171-3.4.5
        - PCI-DSS-Req-7.1
        - CJIS-5.5.2.2

    - name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_send_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80921-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_send_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80918-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.ip_forward is set to 0
      sysctl:
        name: net.ipv4.ip_forward
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_ip_forward
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81024-2
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20

    - name: Ensure sysctl net.ipv4.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.all.accept_source_route
        value: '{{ sysctl_net_ipv4_conf_all_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81011-9
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20

    - name: Ensure sysctl net.ipv4.tcp_syncookies is set
      sysctl:
        name: net.ipv4.tcp_syncookies
        value: '{{ sysctl_net_ipv4_tcp_syncookies_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_tcp_syncookies
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80923-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(1)
        - NIST-800-53-SC-5(2)
        - NIST-800-53-SC-5(3)(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.default.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80919-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
      sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: '{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80922-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.conf.default.log_martians is set
      sysctl:
        name: net.ipv4.conf.default.log_martians
        value: '{{ sysctl_net_ipv4_conf_default_log_martians_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_log_martians
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81020-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(3)(a)
        - NIST-800-171-3.1.20

    - name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.default.accept_source_route
        value: '{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80920-2
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.all.secure_redirects
        value: '{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_secure_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81016-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20

    - name: Ensure sysctl net.ipv4.conf.all.rp_filter is set
      sysctl:
        name: net.ipv4.conf.all.rp_filter
        value: '{{ sysctl_net_ipv4_conf_all_rp_filter_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_rp_filter
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81021-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20

    - name: Ensure sysctl net.ipv4.conf.all.log_martians is set
      sysctl:
        name: net.ipv4.conf.all.log_martians
        value: '{{ sysctl_net_ipv4_conf_all_log_martians_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_log_martians
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81018-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5(3)(a)
        - NIST-800-171-3.1.20

    - name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
      sysctl:
        name: net.ipv4.icmp_ignore_bogus_error_responses
        value: '{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81023-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20

    - name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_all_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80917-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1

    - name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
      sysctl:
        name: net.ipv4.conf.default.rp_filter
        value: '{{ sysctl_net_ipv4_conf_default_rp_filter_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv4_conf_default_rp_filter
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81022-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SC-7(a)
        - NIST-800-171-3.1.20

    - name: Ensure firewalld is installed
      package:
        name: firewalld
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_firewalld_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82998-6
        - NIST-800-53-CM-6(a)

    - name: Enable service firewalld
      block:

        - name: Gather the package facts
          package_facts:
            manager: auto

        - name: Enable service firewalld
          service:
            name: firewalld
            enabled: 'yes'
            state: started
          when:
            - '"firewalld" in ansible_facts.packages'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_firewalld_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80877-4
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CA-3(5)
        - NIST-800-53-SC-7(21)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.3
        - NIST-800-171-3.4.7

    - name: Disable IPv6 Networking kernel module
      lineinfile:
        create: true
        dest: /etc/modprobe.d/ipv6.conf
        regexp: ^options\s+ipv6\s+disable=\d
        line: options ipv6 disable=1
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_ipv6_option_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82872-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Ensure disable_ipv6 (all and default) is set to 1
      sysctl:
        name: '{{ item }}'
        value: '1'
        state: present
        reload: true
      with_items:
        - net.ipv6.conf.all.disable_ipv6
        - net.ipv6.conf.default.disable_ipv6
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_ipv6_option_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82872-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Ensure sysctl net.ipv6.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.all.accept_redirects
        value: '{{ sysctl_net_ipv6_conf_all_accept_redirects_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_all_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81009-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20

    - name: Ensure sysctl net.ipv6.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.default.accept_source_route
        value: '{{ sysctl_net_ipv6_conf_default_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_default_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81015-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20

    - name: Ensure sysctl net.ipv6.conf.default.accept_ra is set
      sysctl:
        name: net.ipv6.conf.default.accept_ra
        value: '{{ sysctl_net_ipv6_conf_default_accept_ra_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_default_accept_ra
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81007-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20

    - name: Ensure sysctl net.ipv6.conf.all.accept_ra is set
      sysctl:
        name: net.ipv6.conf.all.accept_ra
        value: '{{ sysctl_net_ipv6_conf_all_accept_ra_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_all_accept_ra
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81006-9
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20

    - name: Ensure sysctl net.ipv6.conf.all.forwarding is set
      sysctl:
        name: net.ipv6.conf.all.forwarding
        value: '{{ sysctl_net_ipv6_conf_all_forwarding_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_all_forwarding
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82863-2
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.all.accept_source_route
        value: '{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_net_ipv6_conf_all_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81013-5
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.20

    - name: Ensure kernel module 'dccp' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/dccp.conf
        regexp: dccp
        line: install dccp /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_dccp_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80833-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.6
        - CJIS-5.10.1

    - name: Ensure kernel module 'tipc' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/tipc.conf
        regexp: tipc
        line: install tipc /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_tipc_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82297-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Ensure kernel module 'sctp' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/sctp.conf
        regexp: sctp
        line: install sctp /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_sctp_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80834-5
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.6
        - CJIS-5.10.1

    - name: Ensure kernel module 'rds' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/rds.conf
        regexp: rds
        line: install rds /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_rds_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82870-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Configure System Cryptography Policy
      lineinfile:
        path: /etc/crypto-policies/config
        regexp: ^(?!#)(\S+)$
        line: '{{ var_system_crypto_policy }}'
        create: true
      tags:
        - configure_crypto_policy
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80935-0
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(2)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MA-4(6)
        - NIST-800-53-SC-13
        - NIST-800-53-SC-12(2)
        - NIST-800-53-SC-12(3)

    - name: Verify that Crypto Policy is Set (runtime)
      command: /usr/bin/update-crypto-policies --set {{ var_system_crypto_policy }}
      tags:
        - configure_crypto_policy
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80935-0
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(2)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MA-4(6)
        - NIST-800-53-SC-13
        - NIST-800-53-SC-12(2)
        - NIST-800-53-SC-12(3)

    - name: Configure SSH to use System Crypto Policy
      lineinfile:
        dest: /etc/sysconfig/sshd
        state: absent
        regexp: ^\s*CRYPTO_POLICY.*$
      tags:
        - configure_ssh_crypto_policy
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80939-2
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-17(2)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MA-4(6)
        - NIST-800-53-SC-13

    - name: Ensure aide is installed
      package:
        name: aide
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_aide_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80844-4
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3

    - name: Ensure AIDE is installed
      package:
        name: '{{ item }}'
        state: present
      with_items:
        - aide
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - aide_periodic_cron_checking
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80676-0
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3

    - name: Configure Periodic Execution of AIDE
      cron:
        name: run AIDE check
        minute: 5
        hour: 4
        weekday: 0
        user: root
        job: /usr/sbin/aide --check
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - aide_periodic_cron_checking
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80676-0
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3

    - name: Read list of files with incorrect permissions
      command: rpm -Va --nodeps --nosignature --nofiledigest --nosize --nomtime --nordev
        --nocaps --nolinkto --nouser --nogroup
      args:
        warn: false
      register: files_with_incorrect_permissions
      failed_when: files_with_incorrect_permissions.rc > 1
      changed_when: false
      check_mode: false
      tags:
        - rpm_verify_permissions
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80858-4
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1

    - name: Create list of packages
      command: rpm -qf "{{ item }}"
      args:
        warn: false
      with_items: '{{ files_with_incorrect_permissions.stdout_lines | map(''regex_findall'',
        ''^[.]+[M]+.* (\/.*)'', ''\1'') | map(''join'') | select(''match'', ''(\/.*)'')
        | list | unique }}'
      register: list_of_packages
      changed_when: false
      check_mode: false
      when: (files_with_incorrect_permissions.stdout_lines | length > 0)
      tags:
        - rpm_verify_permissions
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80858-4
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1

    - name: Correct file permissions with RPM
      command: rpm --setperms '{{ item }}'
      args:
        warn: false
      with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list
        | unique }}'
      when: (files_with_incorrect_permissions.stdout_lines | length > 0)
      tags:
        - rpm_verify_permissions
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80858-4
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1

    - name: Read list of files with incorrect ownership
      command: rpm -Va --nodeps --nosignature --nofiledigest --nosize --nomtime --nordev
        --nocaps --nolinkto --nomode
      args:
        warn: false
      register: files_with_incorrect_ownership
      failed_when: files_with_incorrect_ownership.rc > 1
      changed_when: false
      check_mode: false
      tags:
        - rpm_verify_ownership
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-82196-7
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - NIST-800-53-AU-9(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1

    - name: Create list of packages
      command: rpm -qf "{{ item }}"
      args:
        warn: false
      with_items: '{{ files_with_incorrect_ownership.stdout_lines | map(''regex_findall'',
        ''^[.]+[U|G]+.* (\/.*)'', ''\1'') | map(''join'') | select(''match'', ''(\/.*)'')
        | list | unique }}'
      register: list_of_packages
      changed_when: false
      check_mode: false
      when: (files_with_incorrect_ownership.stdout_lines | length > 0)
      tags:
        - rpm_verify_ownership
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-82196-7
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - NIST-800-53-AU-9(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1

    - name: Correct file ownership with RPM
      command: rpm --quiet --setugids '{{ item }}'
      args:
        warn: false
      with_items: '{{ list_of_packages.results | map(attribute=''stdout_lines'') | list
        | unique }}'
      when: (files_with_incorrect_ownership.stdout_lines | length > 0)
      tags:
        - rpm_verify_ownership
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-82196-7
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(c)
        - NIST-800-53-SI-7
        - NIST-800-53-SI-7(1)
        - NIST-800-53-SI-7(6)
        - NIST-800-53-AU-9(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1

    - name: Ensure sudo is installed
      package:
        name: sudo
        state: present
      tags:
        - package_sudo_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82214-8
        - NIST-800-53-CM-6(a)

    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: false
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80790-9
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Ensure GPG check is globally activated (yum)
      ini_file:
        dest: /etc/yum.conf
        section: main
        option: gpgcheck
        value: 1
        no_extra_spaces: true
        create: false
      when: (ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or ansible_distribution
        == "Scientific" or yum_config_file.stat.exists)
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80790-9
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Ensure GPG check is globally activated (dnf)
      ini_file:
        dest: /etc/dnf/dnf.conf
        section: main
        option: gpgcheck
        value: 1
        no_extra_spaces: true
        create: false
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80790-9
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-SA-12
        - NIST-800-53-SA-12(10)
        - NIST-800-53-CM-11(a)
        - NIST-800-53-CM-11(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Read permission of GPG key directory
      stat:
        path: /etc/pki/rpm-gpg/
      register: gpg_key_directory_permission
      check_mode: false
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80795-8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Read signatures in GPG key
      command: gpg --show-keys --with-fingerprint --with-colons "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
      args:
        warn: false
      changed_when: false
      register: gpg_fingerprints
      check_mode: false
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80795-8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Set Fact - Installed GPG Fingerprints
      set_fact:
        gpg_installed_fingerprints: |-
          {{ gpg_fingerprints.stdout | regex_findall('^pub.*
          (?:^fpr[:]*)([0-9A-Fa-f]*)', '\1') | list }}
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80795-8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Set Fact - Valid fingerprints
      set_fact:
        gpg_valid_fingerprints: ("567E347AD0044ADE55BA8A5F199E2F91FD431D51" "6A6AA7C97C8890AEC6AEBFE2F76F66C3D4082792")
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80795-8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Import RedHat GPG key
      rpm_key:
        state: present
        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
      when:
        - gpg_key_directory_permission.stat.mode <= '0755'
        - (gpg_installed_fingerprints | difference(gpg_valid_fingerprints)) | length ==
          0
        - gpg_installed_fingerprints | length > 0
        - ansible_distribution == "RedHat"
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - no_reboot_needed
        - CCE-80795-8
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-SC-12
        - NIST-800-53-SC-12(3)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Security patches are up to date
      package:
        name: '*'
        state: latest
      tags:
        - security_patches_up_to_date
        - high_severity
        - skip_ansible_lint
        - patch_strategy
        - low_complexity
        - high_disruption
        - reboot_required
        - CCE-80865-9
        - NIST-800-53-SI-2(5)
        - NIST-800-53-SI-2(c)
        - NIST-800-53-CM-6(a)
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1

    - name: Ensure permission noexec are set on var_removable_partition
      lineinfile:
        path: /etc/fstab
        regexp: ^\s*({{ var_removable_partition }})\s+([^\s]*)\s+([^\s]*)\s+([^\s]*)(.*)$
        backrefs: true
        line: \1 \2 \3 \4,noexec \5
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_noexec_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82746-9
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82154-6

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82154-6

    - name: Ensure permission nosuid are set on /var/tmp
      mount:
        path: /var/tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - mount_info is defined and "nosuid" not in mount_info.options
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82154-6

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/home'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_home_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-81048-1

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_home_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-81048-1

    - name: Ensure permission nodev are set on /home
      mount:
        path: /home
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - mount_info is defined and "nodev" not in mount_info.options
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_home_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-81048-1

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82068-8

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82068-8

    - name: Ensure permission nodev are set on /var/tmp
      mount:
        path: /var/tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - mount_info is defined and "nodev" not in mount_info.options
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82068-8

    - name: Ensure permission nodev are set on var_removable_partition
      lineinfile:
        path: /etc/fstab
        regexp: ^\s*({{ var_removable_partition }})\s+([^\s]*)\s+([^\s]*)\s+([^\s]*)(.*)$
        backrefs: true
        line: \1 \2 \3 \4,nodev \5
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_nodev_removable_partitions
        - low_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82742-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82623-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82623-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Ensure permission nodev are set on /tmp
      mount:
        path: /tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - mount_info is defined and "nodev" not in mount_info.options
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_nodev
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82623-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82139-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82139-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Ensure permission noexec are set on /tmp
      mount:
        path: /tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},noexec'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - mount_info is defined and "noexec" not in mount_info.options
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82139-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Check information associated to mountpoint
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80838-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80838-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Ensure permission noexec are set on /dev/shm
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},noexec'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - mount_info is defined and "noexec" not in mount_info.options
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_noexec
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80838-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Ensure permission nosuid are set on var_removable_partition
      lineinfile:
        path: /etc/fstab
        regexp: ^\s*({{ var_removable_partition }})\s+([^\s]*)\s+([^\s]*)\s+([^\s]*)(.*)$
        backrefs: true
        line: \1 \2 \3 \4,nosuid \5
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_nosuid_removable_partitions
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82744-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/var/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82151-2

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82151-2

    - name: Ensure permission noexec are set on /var/tmp
      mount:
        path: /var/tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},noexec'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - mount_info is defined and "noexec" not in mount_info.options
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_var_tmp_noexec
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82151-2

    - name: Check information associated to mountpoint
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80839-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80839-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Ensure permission nosuid are set on /dev/shm
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - mount_info is defined and "nosuid" not in mount_info.options
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nosuid
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80839-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Check information associated to mountpoint
      command: findmnt  '/dev/shm'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80837-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80837-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Ensure permission nodev are set on /dev/shm
      mount:
        path: /dev/shm
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nodev'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - mount_info is defined and "nodev" not in mount_info.options
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_dev_shm_nodev
        - medium_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-80837-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Check information associated to mountpoint
      command: findmnt --fstab '/tmp'
      register: device_name
      failed_when: device_name.rc > 1
      changed_when: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82140-5
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Create mount_info dictionary variable
      set_fact:
        mount_info: '{{ mount_info|default({})|combine({item.0: item.1}) }}'
      with_together:
        - '{{ device_name.stdout_lines[0].split() | list | lower }}'
        - '{{ device_name.stdout_lines[1].split() | list }}'
      when:
        - device_name.stdout is defined and device_name.stdout_lines is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82140-5
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Ensure permission nosuid are set on /tmp
      mount:
        path: /tmp
        src: '{{ mount_info.source }}'
        opts: '{{ mount_info.options }},nosuid'
        state: mounted
        fstype: '{{ mount_info.fstype }}'
      when:
        - mount_info is defined and "nosuid" not in mount_info.options
        - device_name.stdout is defined
        - (device_name.stdout | length > 0)
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - mount_option_tmp_nosuid
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - no_reboot_needed
        - CCE-82140-5
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6
        - NIST-800-53-AC-6(1)
        - NIST-800-53-MP-7

    - name: Disable core dump backtraces
      block:

        - name: Deduplicate values from /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*ProcessSizeMax\s*=\s*
            state: absent

        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            line: ProcessSizeMax=0
            state: present
      tags:
        - coredump_disable_backtraces
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82251-0

    - name: Disable storing core dump
      block:

        - name: Deduplicate values from /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            regexp: ^\s*Storage\s*=\s*
            state: absent

        - name: Insert correct line to /etc/systemd/coredump.conf
          lineinfile:
            path: /etc/systemd/coredump.conf
            create: false
            line: Storage=none
            state: present
      tags:
        - coredump_disable_storage
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82252-8

    - name: disable core dumps with limits
      lineinfile:
        dest: /etc/security/limits.conf
        regexp: ^[^#].*core
        line: '*        hard       core      0'
        create: true
      tags:
        - disable_users_coredumps
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-81038-2

    - name: Ensure sysctl fs.suid_dumpable is set to 0
      sysctl:
        name: fs.suid_dumpable
        value: '0'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_fs_suid_dumpable
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80912-9
        - NIST-800-53-SI-11(a)
        - NIST-800-53-SI-11(b)

    - name: Ensure sysctl kernel.randomize_va_space is set to 2
      sysctl:
        name: kernel.randomize_va_space
        value: '2'
        state: present
        reload: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sysctl_kernel_randomize_va_space
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80916-0
        - NIST-800-53-SC-30
        - NIST-800-53-SC-30(2)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.7

    - name: Test for existence /etc/shadow
      stat:
        path: /etc/shadow
      register: file_exists
      tags:
        - file_permissions_etc_shadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80813-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Ensure permission 0000 on /etc/shadow
      file:
        path: /etc/shadow
        mode: '0000'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_permissions_etc_shadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80813-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Test for existence /etc/passwd
      stat:
        path: /etc/passwd
      register: file_exists
      tags:
        - file_groupowner_etc_passwd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80798-2
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Ensure group owner 0 on /etc/passwd
      file:
        path: /etc/passwd
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_groupowner_etc_passwd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80798-2
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Test for existence /etc/group-
      stat:
        path: /etc/group-
      register: file_exists
      tags:
        - file_groupowner_backup_etc_group
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83475-4

    - name: Ensure group owner 0 on /etc/group-
      file:
        path: /etc/group-
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_groupowner_backup_etc_group
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83475-4

    - name: Test for existence /etc/shadow-
      stat:
        path: /etc/shadow-
      register: file_exists
      tags:
        - file_owner_backup_etc_shadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83413-5

    - name: Ensure owner 0 on /etc/shadow-
      file:
        path: /etc/shadow-
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_owner_backup_etc_shadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83413-5

    - name: Test for existence /etc/shadow
      stat:
        path: /etc/shadow
      register: file_exists
      tags:
        - file_owner_etc_shadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80804-8
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Ensure owner 0 on /etc/shadow
      file:
        path: /etc/shadow
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_owner_etc_shadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80804-8
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Test for existence /etc/group-
      stat:
        path: /etc/group-
      register: file_exists
      tags:
        - file_permissions_backup_etc_group
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83483-8

    - name: Ensure permission 0644 on /etc/group-
      file:
        path: /etc/group-
        mode: '0644'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_permissions_backup_etc_group
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83483-8

    - name: Test for existence /etc/group-
      stat:
        path: /etc/group-
      register: file_exists
      tags:
        - file_owner_backup_etc_group
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83473-9

    - name: Ensure owner 0 on /etc/group-
      file:
        path: /etc/group-
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_owner_backup_etc_group
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83473-9

    - name: Test for existence /etc/group
      stat:
        path: /etc/group
      register: file_exists
      tags:
        - file_permissions_etc_group
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80810-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Ensure permission 0644 on /etc/group
      file:
        path: /etc/group
        mode: '0644'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_permissions_etc_group
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80810-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Test for existence /etc/gshadow
      stat:
        path: /etc/gshadow
      register: file_exists
      tags:
        - file_permissions_etc_gshadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80811-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure permission 0000 on /etc/gshadow
      file:
        path: /etc/gshadow
        mode: '0000'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_permissions_etc_gshadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80811-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/passwd
      stat:
        path: /etc/passwd
      register: file_exists
      tags:
        - file_owner_etc_passwd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80803-0
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Ensure owner 0 on /etc/passwd
      file:
        path: /etc/passwd
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_owner_etc_passwd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80803-0
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Test for existence /etc/gshadow-
      stat:
        path: /etc/gshadow-
      register: file_exists
      tags:
        - file_groupowner_backup_etc_gshadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83535-5

    - name: Ensure group owner 0 on /etc/gshadow-
      file:
        path: /etc/gshadow-
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_groupowner_backup_etc_gshadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83535-5

    - name: Test for existence /etc/gshadow-
      stat:
        path: /etc/gshadow-
      register: file_exists
      tags:
        - file_owner_backup_etc_gshadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83533-0

    - name: Ensure owner 0 on /etc/gshadow-
      file:
        path: /etc/gshadow-
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_owner_backup_etc_gshadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83533-0

    - name: Test for existence /etc/passwd
      stat:
        path: /etc/passwd
      register: file_exists
      tags:
        - file_permissions_etc_passwd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80812-1
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Ensure permission 0644 on /etc/passwd
      file:
        path: /etc/passwd
        mode: '0644'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_permissions_etc_passwd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80812-1
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Test for existence /etc/passwd-
      stat:
        path: /etc/passwd-
      register: file_exists
      tags:
        - file_groupowner_backup_etc_passwd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83324-4

    - name: Ensure group owner 0 on /etc/passwd-
      file:
        path: /etc/passwd-
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_groupowner_backup_etc_passwd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83324-4

    - name: Test for existence /etc/shadow
      stat:
        path: /etc/shadow
      register: file_exists
      tags:
        - file_groupowner_etc_shadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80799-0
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Ensure group owner 0 on /etc/shadow
      file:
        path: /etc/shadow
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_groupowner_etc_shadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80799-0
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Test for existence /etc/group
      stat:
        path: /etc/group
      register: file_exists
      tags:
        - file_groupowner_etc_group
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80796-6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Ensure group owner 0 on /etc/group
      file:
        path: /etc/group
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_groupowner_etc_group
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80796-6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Test for existence /etc/shadow-
      stat:
        path: /etc/shadow-
      register: file_exists
      tags:
        - file_permissions_backup_etc_shadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83417-6

    - name: Ensure permission 0000 on /etc/shadow-
      file:
        path: /etc/shadow-
        mode: '0000'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_permissions_backup_etc_shadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83417-6

    - name: Test for existence /etc/gshadow
      stat:
        path: /etc/gshadow
      register: file_exists
      tags:
        - file_groupowner_etc_gshadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80797-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure group owner 0 on /etc/gshadow
      file:
        path: /etc/gshadow
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_groupowner_etc_gshadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80797-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/shadow-
      stat:
        path: /etc/shadow-
      register: file_exists
      tags:
        - file_groupowner_backup_etc_shadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83415-0

    - name: Ensure group owner 0 on /etc/shadow-
      file:
        path: /etc/shadow-
        group: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_groupowner_backup_etc_shadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83415-0

    - name: Test for existence /etc/passwd-
      stat:
        path: /etc/passwd-
      register: file_exists
      tags:
        - file_permissions_backup_etc_passwd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83332-7

    - name: Ensure permission 0644 on /etc/passwd-
      file:
        path: /etc/passwd-
        mode: '0644'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_permissions_backup_etc_passwd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83332-7

    - name: Test for existence /etc/gshadow-
      stat:
        path: /etc/gshadow-
      register: file_exists
      tags:
        - file_permissions_backup_etc_gshadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83573-6

    - name: Ensure permission 0000 on /etc/gshadow-
      file:
        path: /etc/gshadow-
        mode: '0000'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_permissions_backup_etc_gshadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83573-6

    - name: Test for existence /etc/gshadow
      stat:
        path: /etc/gshadow
      register: file_exists
      tags:
        - file_owner_etc_gshadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80802-2
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure owner 0 on /etc/gshadow
      file:
        path: /etc/gshadow
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_owner_etc_gshadow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80802-2
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/passwd-
      stat:
        path: /etc/passwd-
      register: file_exists
      tags:
        - file_owner_backup_etc_passwd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83326-9

    - name: Ensure owner 0 on /etc/passwd-
      file:
        path: /etc/passwd-
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_owner_backup_etc_passwd
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83326-9

    - name: Test for existence /etc/group
      stat:
        path: /etc/group
      register: file_exists
      tags:
        - file_owner_etc_group
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80801-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Ensure owner 0 on /etc/group
      file:
        path: /etc/group
        owner: '0'
      when: file_exists.stat is defined and file_exists.stat.exists
      tags:
        - file_owner_etc_group
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80801-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - PCI-DSS-Req-8.7.c
        - CJIS-5.5.2.2

    - name: Disable service autofs
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service autofs
          systemd:
            name: autofs.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"autofs.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_autofs_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80873-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MP-7
        - NIST-800-171-3.4.6

    - name: Unit Socket Exists - autofs.socket
      command: systemctl list-unit-files autofs.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_autofs_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80873-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MP-7
        - NIST-800-171-3.4.6

    - name: Disable socket autofs
      systemd:
        name: autofs.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"autofs.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_autofs_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80873-3
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MP-7
        - NIST-800-171-3.4.6

    - name: Ensure kernel module 'udf' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/udf.conf
        regexp: udf
        line: install udf /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_udf_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82729-5
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.6

    - name: Ensure kernel module 'vfat' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/vfat.conf
        regexp: vfat
        line: install vfat /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_vfat_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-82170-2
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.6

    - name: Ensure kernel module 'cramfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/cramfs.conf
        regexp: cramfs
        line: install cramfs /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_cramfs_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-81031-7
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.6

    - name: Ensure kernel module 'squashfs' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/squashfs.conf
        regexp: squashfs
        line: install squashfs /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_squashfs_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-83498-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.4.6

    - name: Ensure kernel module 'usb-storage' is disabled
      lineinfile:
        create: true
        dest: /etc/modprobe.d/usb-storage.conf
        regexp: usb-storage
        line: install usb-storage /bin/true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - kernel_module_usb-storage_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - reboot_required
        - CCE-80835-2
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-MP-7
        - NIST-800-171-3.1.21

    - name: Ensure libselinux is installed
      package:
        name: libselinux
        state: present
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_libselinux_installed
        - high_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82877-2

    - name: Ensure mcstrans is removed
      package:
        name: mcstrans
        state: absent
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_mcstrans_removed
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82756-8

    - name: Ensure setroubleshoot is removed
      package:
        name: setroubleshoot
        state: absent
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_setroubleshoot_removed
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82755-0

    - name: Ensure SELinux Not Disabled in /etc/default/grub
      replace:
        dest: /etc/default/grub
        regexp: selinux=0
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - grub2_enable_selinux
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80827-9
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)(a)
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2

    - name: Configure SELinux Policy
      lineinfile:
        path: /etc/sysconfig/selinux
        regexp: ^SELINUXTYPE=
        line: SELINUXTYPE={{ var_selinux_policy_name }}
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - selinux_policytype
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80868-3
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)(a)
        - NIST-800-53-AU-9
        - NIST-800-53-SC-7(21)
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2

    - name: Ensure SELinux State is Enforcing
      lineinfile:
        path: /etc/sysconfig/selinux
        regexp: ^SELINUX=
        line: SELINUX={{ var_selinux_state }}
        create: true
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - selinux_state
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80869-1
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)(a)
        - NIST-800-53-AU-9
        - NIST-800-53-SC-7(21)
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2

    - name: Test for existence /etc/cron.daily/
      stat:
        path: /etc/cron.daily/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_cron_daily
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82234-6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure group owner 0 on /etc/cron.daily/
      file:
        path: /etc/cron.daily/
        group: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_cron_daily
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82234-6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.weekly/
      stat:
        path: /etc/cron.weekly/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_cron_weekly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82244-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure group owner 0 on /etc/cron.weekly/
      file:
        path: /etc/cron.weekly/
        group: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_cron_weekly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82244-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/crontab
      stat:
        path: /etc/crontab
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_crontab
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82206-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure permission 0600 on /etc/crontab
      file:
        path: /etc/crontab
        mode: '0600'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_crontab
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82206-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.hourly/
      stat:
        path: /etc/cron.hourly/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_cron_hourly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82227-0
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure group owner 0 on /etc/cron.hourly/
      file:
        path: /etc/cron.hourly/
        group: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_cron_hourly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82227-0
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.daily/
      stat:
        path: /etc/cron.daily/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_cron_daily
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82237-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure owner 0 on /etc/cron.daily/
      file:
        path: /etc/cron.daily/
        owner: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_cron_daily
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82237-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/crontab
      stat:
        path: /etc/crontab
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_crontab
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82224-7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure owner 0 on /etc/crontab
      file:
        path: /etc/crontab
        owner: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_crontab
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82224-7
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.daily/
      stat:
        path: /etc/cron.daily/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_cron_daily
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82240-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure permission 0700 on /etc/cron.daily/
      file:
        path: /etc/cron.daily/
        mode: '0700'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_cron_daily
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82240-3
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.d/
      stat:
        path: /etc/cron.d/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_cron_d
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82272-6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure owner 0 on /etc/cron.d/
      file:
        path: /etc/cron.d/
        owner: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_cron_d
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82272-6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.hourly/
      stat:
        path: /etc/cron.hourly/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_cron_hourly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82230-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure permission 0700 on /etc/cron.hourly/
      file:
        path: /etc/cron.hourly/
        mode: '0700'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_cron_hourly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82230-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.weekly/
      stat:
        path: /etc/cron.weekly/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_cron_weekly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82253-6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure permission 0700 on /etc/cron.weekly/
      file:
        path: /etc/cron.weekly/
        mode: '0700'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_cron_weekly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82253-6
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.hourly/
      stat:
        path: /etc/cron.hourly/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_cron_hourly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82209-8
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure owner 0 on /etc/cron.hourly/
      file:
        path: /etc/cron.hourly/
        owner: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_cron_hourly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82209-8
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.weekly/
      stat:
        path: /etc/cron.weekly/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_cron_weekly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82247-8
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure owner 0 on /etc/cron.weekly/
      file:
        path: /etc/cron.weekly/
        owner: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_cron_weekly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82247-8
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.d/
      stat:
        path: /etc/cron.d/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_cron_d
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82268-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure group owner 0 on /etc/cron.d/
      file:
        path: /etc/cron.d/
        group: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_cron_d
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82268-4
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.d/
      stat:
        path: /etc/cron.d/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_cron_d
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82277-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure permission 0700 on /etc/cron.d/
      file:
        path: /etc/cron.d/
        mode: '0700'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_cron_d
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82277-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/crontab
      stat:
        path: /etc/crontab
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_crontab
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82223-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure group owner 0 on /etc/crontab
      file:
        path: /etc/crontab
        group: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_crontab
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82223-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.monthly/
      stat:
        path: /etc/cron.monthly/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_cron_monthly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82263-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure permission 0700 on /etc/cron.monthly/
      file:
        path: /etc/cron.monthly/
        mode: '0700'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_cron_monthly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82263-5
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.monthly/
      stat:
        path: /etc/cron.monthly/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_cron_monthly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82260-1
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure owner 0 on /etc/cron.monthly/
      file:
        path: /etc/cron.monthly/
        owner: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_cron_monthly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82260-1
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Test for existence /etc/cron.monthly/
      stat:
        path: /etc/cron.monthly/
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_cron_monthly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82256-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure group owner 0 on /etc/cron.monthly/
      file:
        path: /etc/cron.monthly/
        group: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_cron_monthly
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82256-9
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Disable service vsftpd
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service vsftpd
          systemd:
            name: vsftpd.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"vsftpd.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_vsftpd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82413-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Unit Socket Exists - vsftpd.socket
      command: systemctl list-unit-files vsftpd.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_vsftpd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82413-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable socket vsftpd
      systemd:
        name: vsftpd.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"vsftpd.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_vsftpd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82413-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable service rsyncd
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service rsyncd
          systemd:
            name: rsyncd.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"rsyncd.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_rsyncd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83335-0

    - name: Unit Socket Exists - rsyncd.socket
      command: systemctl list-unit-files rsyncd.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_rsyncd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83335-0

    - name: Disable socket rsyncd
      systemd:
        name: rsyncd.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"rsyncd.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_rsyncd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83335-0

    - name: Ensure telnet is removed
      package:
        name: telnet
        state: absent
      tags:
        - package_telnet_removed
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80849-3
        - NIST-800-171-3.1.13

    - name: Ensure xinetd is removed
      package:
        name: xinetd
        state: absent
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - package_xinetd_removed
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80850-1
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Ensure ypbind is removed
      package:
        name: ypbind
        state: absent
      tags:
        - package_ypbind_removed
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82181-9

    - name: Disable service cups
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service cups
          systemd:
            name: cups.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"cups.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_cups_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82861-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Unit Socket Exists - cups.socket
      command: systemctl list-unit-files cups.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_cups_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82861-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable socket cups
      systemd:
        name: cups.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"cups.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_cups_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82861-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Ensure squid is removed
      package:
        name: squid
        state: absent
      tags:
        - package_squid_removed
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82189-2

    - name: Disable service snmpd
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service snmpd
          systemd:
            name: snmpd.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"snmpd.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_snmpd_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82758-4

    - name: Unit Socket Exists - snmpd.socket
      command: systemctl list-unit-files snmpd.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_snmpd_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82758-4

    - name: Disable socket snmpd
      systemd:
        name: snmpd.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"snmpd.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_snmpd_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82758-4

    - name: Disable service avahi-daemon
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service avahi-daemon
          systemd:
            name: avahi-daemon.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"avahi-daemon.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_avahi-daemon_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82188-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Unit Socket Exists - avahi-daemon.socket
      command: systemctl list-unit-files avahi-daemon.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_avahi-daemon_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82188-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable socket avahi-daemon
      systemd:
        name: avahi-daemon.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"avahi-daemon.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_avahi-daemon_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82188-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable service rpcbind
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service rpcbind
          systemd:
            name: rpcbind.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"rpcbind.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_rpcbind_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82858-2

    - name: Unit Socket Exists - rpcbind.socket
      command: systemctl list-unit-files rpcbind.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_rpcbind_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82858-2

    - name: Disable socket rpcbind
      systemd:
        name: rpcbind.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"rpcbind.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_rpcbind_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82858-2

    - name: Disable service nfs
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service nfs
          systemd:
            name: nfs.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"nfs.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_nfs_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82762-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Unit Socket Exists - nfs.socket
      command: systemctl list-unit-files nfs.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_nfs_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82762-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable socket nfs
      systemd:
        name: nfs.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"nfs.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_nfs_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82762-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Ensure xorg-x11-server-common is removed
      package:
        name: xorg-x11-server-common
        state: absent
      tags:
        - package_xorg-x11-server-common_removed
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82757-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Switch to multi-user runlevel
      file:
        src: /usr/lib/systemd/system/multi-user.target
        dest: /etc/systemd/system/default.target
        state: link
        force: true
      tags:
        - xwindows_runlevel_target
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - reboot_required
        - CCE-83380-6
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable service named
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service named
          systemd:
            name: named.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"named.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_named_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82409-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Unit Socket Exists - named.socket
      command: systemctl list-unit-files named.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_named_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82409-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable socket named
      systemd:
        name: named.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"named.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_named_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82409-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable service httpd
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service httpd
          systemd:
            name: httpd.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"httpd.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_httpd_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82761-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Unit Socket Exists - httpd.socket
      command: systemctl list-unit-files httpd.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_httpd_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82761-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable socket httpd
      systemd:
        name: httpd.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"httpd.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_httpd_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82761-8
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable service smb
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service smb
          systemd:
            name: smb.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"smb.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_smb_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82759-2

    - name: Unit Socket Exists - smb.socket
      command: systemctl list-unit-files smb.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_smb_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82759-2

    - name: Disable socket smb
      systemd:
        name: smb.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"smb.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_smb_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82759-2

    - name: Disable service dovecot
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service dovecot
          systemd:
            name: dovecot.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"dovecot.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_dovecot_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82760-0

    - name: Unit Socket Exists - dovecot.socket
      command: systemctl list-unit-files dovecot.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_dovecot_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82760-0

    - name: Disable socket dovecot
      systemd:
        name: dovecot.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"dovecot.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_dovecot_disabled
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82760-0

    - name: Gather list of packages
      package_facts:
        manager: auto
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - postfix_network_listening_disabled
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82174-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Make changes to Postfix configuration file
      lineinfile:
        path: /etc/postfix/main.cf
        create: false
        regexp: ^inet_interfaces\s*=\s.*
        line: inet_interfaces = {{ var_postfix_inet_interfaces }}
        state: present
        insertafter: ^inet_interfaces\s*=\s.*
      when:
        - '"postfix" in ansible_facts.packages'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - postfix_network_listening_disabled
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82174-4
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Test for existence /etc/ssh/sshd_config
      stat:
        path: /etc/ssh/sshd_config
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_sshd_config
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82901-0
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure group owner 0 on /etc/ssh/sshd_config
      file:
        path: /etc/ssh/sshd_config
        group: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_groupowner_sshd_config
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82901-0
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Find /etc/ssh/ file(s)
      find:
        paths: /etc/ssh/
        patterns: ^.*.pub$
        use_regex: true
      register: files_found
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_sshd_pub_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82428-4
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10

    - name: Set permissions for /etc/ssh/ file(s)
      file:
        path: '{{ item.path }}'
        mode: '0644'
      with_items:
        - '{{ files_found.files }}'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_sshd_pub_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82428-4
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10

    - name: Test for existence /etc/ssh/sshd_config
      stat:
        path: /etc/ssh/sshd_config
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_sshd_config
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82894-7
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure permission 0600 on /etc/ssh/sshd_config
      file:
        path: /etc/ssh/sshd_config
        mode: '0600'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_sshd_config
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82894-7
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Find /etc/ssh/ file(s)
      find:
        paths: /etc/ssh/
        patterns: ^.*_key$
        use_regex: true
      register: files_found
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_sshd_private_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82424-3
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10

    - name: Set permissions for /etc/ssh/ file(s)
      file:
        path: '{{ item.path }}'
        mode: '0640'
      with_items:
        - '{{ files_found.files }}'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_permissions_sshd_private_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82424-3
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10

    - name: Test for existence /etc/ssh/sshd_config
      stat:
        path: /etc/ssh/sshd_config
      register: file_exists
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_sshd_config
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82898-8
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Ensure owner 0 on /etc/ssh/sshd_config
      file:
        path: /etc/ssh/sshd_config
        owner: '0'
      when:
        - file_exists.stat is defined and file_exists.stat.exists
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - file_owner_sshd_config
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82898-8
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-6(1)

    - name: Set LogLevel to INFO
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*LogLevel\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: LogLevel INFO
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_set_loglevel_info
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82282-5
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)

    - name: Disable SSH Access via Empty Passwords
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitEmptyPasswords\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitEmptyPasswords no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_empty_passwords
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80896-4
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - CJIS-5.5.6

    - name: Disable SSH TCP Forwarding
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*AllowTcpForwarding\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: AllowTcpForwarding no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_tcp_forwarding
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83301-2

    - name: Set SSH Client Alive Max Count
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*ClientAliveCountMax\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: ClientAliveCountMax {{ var_sshd_set_keepalive }}
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_set_keepalive
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80907-9
        - NIST-800-53-AC-2(5)
        - NIST-800-53-AC-12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-SC-10
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.11
        - CJIS-5.5.6

    - name: Disable SSH Support for .rhosts Files
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*IgnoreRhosts\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: IgnoreRhosts yes
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_rhosts
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80899-8
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.12
        - CJIS-5.5.6

    - name: Set SSH Idle Timeout Interval
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*ClientAliveInterval\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: ClientAliveInterval {{ sshd_idle_timeout_value }}
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_set_idle_timeout
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80906-1
        - NIST-800-53-CM-6(a)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-AC-2(5)
        - NIST-800-53-AC-12
        - NIST-800-53-AC-17(a)
        - NIST-800-53-SC-10
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.11
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.6

    - name: Set SSH authentication attempt limit
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*MaxAuthTries\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: MaxAuthTries {{ sshd_max_auth_tries_value }}
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_set_max_auth_tries
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83500-9

    - name: Do Not Allow SSH Environment Options
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitUserEnvironment\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitUserEnvironment no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_do_not_permit_user_env
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80903-8
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.12
        - CJIS-5.5.6

    - name: Enable SSH Warning Banner
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*Banner\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: Banner /etc/issue
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_enable_warning_banner
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80905-3
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(c)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.9
        - CJIS-5.5.6

    - name: Disable X11 Forwarding
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*X11Forwarding\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: X11Forwarding no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_x11_forwarding
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-83360-8

    - name: Disable Host-Based Authentication
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*HostbasedAuthentication\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: HostbasedAuthentication no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - disable_host_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80786-7
        - NIST-800-53-AC-3
        - NIST-800-53-AC-17(a)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.12
        - CJIS-5.5.6

    - name: Disable SSH Root Login
      block:

        - name: Deduplicate values from /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: false
            regexp: (?i)^\s*PermitRootLogin\s+
            state: absent

        - name: Insert correct line to /etc/ssh/sshd_config
          lineinfile:
            path: /etc/ssh/sshd_config
            create: true
            line: PermitRootLogin no
            state: present
            insertbefore: ^[#\s]*Match
            validate: /usr/sbin/sshd -t -f %s
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - sshd_disable_root_login
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-80901-2
        - NIST-800-53-AC-6(2)
        - NIST-800-53-AC-17(a)
        - NIST-800-53-IA-2
        - NIST-800-53-IA-2(5)
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)
        - NIST-800-53-
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - CJIS-5.5.6

    - name: Disable service rhnsd
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service rhnsd
          systemd:
            name: rhnsd.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"rhnsd.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_rhnsd_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82405-2
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Unit Socket Exists - rhnsd.socket
      command: systemctl list-unit-files rhnsd.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_rhnsd_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82405-2
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable socket rhnsd
      systemd:
        name: rhnsd.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"rhnsd.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_rhnsd_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82405-2
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable service dhcpd
      block:

        - name: Gather the service facts
          service_facts: null

        - name: Disable service dhcpd
          systemd:
            name: dhcpd.service
            enabled: 'no'
            state: stopped
            masked: 'yes'
          when: '"dhcpd.service" in ansible_facts.services'
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_dhcpd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82864-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Unit Socket Exists - dhcpd.socket
      command: systemctl list-unit-files dhcpd.socket
      args:
        warn: false
      register: socket_file_exists
      changed_when: false
      ignore_errors: true
      check_mode: false
      when: ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_dhcpd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82864-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Disable socket dhcpd
      systemd:
        name: dhcpd.socket
        enabled: 'no'
        state: stopped
        masked: 'yes'
      when:
        - '"dhcpd.socket" in socket_file_exists.stdout_lines[1]'
        - ansible_virtualization_role != "guest" or ansible_virtualization_type != "docker"
      tags:
        - service_dhcpd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82864-0
        - NIST-800-53-CM-7(a)
        - NIST-800-53-CM-7(b)
        - NIST-800-53-CM-6(a)

    - name: Ensure openldap-clients is removed
      package:
        name: openldap-clients
        state: absent
      tags:
        - package_openldap-clients_removed
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - no_reboot_needed
        - CCE-82885-5

